@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@model ProductRecommendationsViewModel

<button type="button" class="back-button" onclick="history.back()"><img src="~/assets/circle-chevron-left.svg" class="back-icon" /></button>

<div class="main-product-container">
    <div class="center-main-product">
        <img src="@Model.Product.ImgLink" class="main-product-img" alt="Product Image">
    </div>
    <div class="center-main-product">
        <div class="center-form">
            <form id=@Model.Product.ProductId method="post" asp-page="/Cart">
                <div class="format-product-details">
                    <h2 class="form-header">@Model.Product.Name</h2><br />
                    <p>@Model.Product.Description</p>
                    <input type="hidden" name="ProductId" value="@Model.Product.ProductId" />
                    <input type="hidden" name="ReturnUrl" value="Home/Shop" /><br />
                    <div class="align-quantity-price">
                        <div class="">
                            <label for="quantity">Quantity:</label><br />
                            <input type="number" name="quantity" id="quantity" class="quantity-input" value="1" min="1">
                        </div>
                        <div>
                            <label>Unit Price:</label>
                            <p class="price-border">$@Model.Product.Price.00</p>
                        </div>
                        <div>
                            <label>Total Price: </label>
                            <p class="price-border" id="totalPrice">$</p>
                        </div>
                    </div><br /><br />

                    <!-- Will take us straight to the razor page! But it does so using this route -->
                    <div class="center-item">
                        <button type="submit" class="button">Add to Cart</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<br />
<br />
<br />
<div class="" style="color: #555555">
    <h4 class="ymal">You might also like: </h4>
    <div class="recommend-container" asp-for="ProductDetails">
        @foreach (var recProduct in Model.RecommendedProducts)
        {


            <a href="@Url.Action("ProductDetails", "Home", new { id = recProduct.ProductId })" class="recommend-item">
                <img src="@recProduct.ImgLink" alt="@recProduct.Name" class="recommend-img">
                <h3 class="recommend-header">@recProduct.Name</h3>
                <!-- Add more details as needed -->
            </a>
        }
    </div>
</div>
<br />
<br />

<script>
    // Function to calculate and update total price
    function updateTotalPrice() {
        // Get quantity and unit price values
        var quantity = parseInt(document.getElementById('quantity').value);
        var unitPrice = parseFloat(document.querySelector('.price-border').innerText.replace('$', ''));

        // Ensure quantity is non-negative
        quantity = Math.max(quantity, 0);

        // Calculate total price
        var totalPrice = quantity * unitPrice;

        // Update total price in the HTML
        document.getElementById('totalPrice').innerText = '$' + totalPrice.toFixed(2);
    }

    // Add event listener to quantity input
    document.getElementById('quantity').addEventListener('input', updateTotalPrice);

    // Run updateTotalPrice function initially
    updateTotalPrice();
</script>