@{
    ViewData["Title"] = "Shop";
}

<!-- We can pass one model that has lots of stuff in it; we had to use individual model views, though! -->
@model ProductListViewModel

<div class="page-buttons-container">
    <div class="page-buttons">
        <div page-model="@Model.PaginationInfo" page-action="Shop" page-class-enabled="true"
             page-class-normal="btn-outline-dark" page-class-selected="page-button-selected" page-class="page-button"
             page-url-legoType="@Model.CurrentLegoCategory" page-url-legoType="@Model.CurrentLegoColor" page-url-pageSize="@Model.CurrentPageSize" class="btn-group pull-right m-1">
        </div>
    </div>
</div>

<div class="">
    <div class="row width">
        <!-- Filter section -->
        <div class="col-md-2 mb-4">
            <div class="row">
                <div class="col-md-12">
                    <div class="col-md-12 mt-3">
                        <h5>Show:</h5>
                        <div class="show-option-container">
                            <a asp-controller="Home" asp-action="Shop" asp-route-pageSize="5" class="show-option-link">5</a>
                            <a asp-controller="Home" asp-action="Shop" asp-route-pageSize="10" class="show-option-link">10</a>
                            <a asp-controller="Home" asp-action="Shop" asp-route-pageSize="20" class="show-option-link">20</a>
                        </div>
                    </div>
                    <br />
                    <!-- Sidebar -->
                    <div class="sidebar" id="mySidebar">
                        <div class="col-md-12">
                            <h5>Filter by Category:</h5>
                            <!-- Include the contents of vc:lego-types here -->
                            <vc:lego-types />
                        </div>
                        <br />
                        <div class="col-md-12">
                            <h5>Filter by Color:</h5>
                            <vc:lego-colors />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Products section -->
        <div class="col-md-10 contains_sets">
            <div class="row row-cols-md-4">
                <!-- Updated class to handle varying column counts -->
                @foreach (Product p in Model.Products)
                {
                    <a href="@Url.Action("ProductDetails", "Home", new { id = p.ProductId })" class="text-decoration-none">
                        <div class="col item">
                            <div >
                                <img src="@p.ImgLink" class="product-image" alt="Product Image">
                            </div><br />
                            <div class="item-header-container">
                                <h3 class="item-header">@p.Name</h3>
                            </div>
                            <h4>$@p.Price.00</h4>
                        </div>
                    </a>
                }
        </div>
    </div>
</div>





