<!-- This is a default view for the component -->
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@{
    bool isAuthenticated = User.Identity.IsAuthenticated;
}

@if (ViewContext.RouteData.Values["Action"].ToString().Equals("Shop"))
{
    <div class="d-grid gap-2">
        <a class="btn btn-outline-secondary" asp-controller="Home" asp-action="Shop" asp-route-legoType="">View All</a>
        @foreach (string legoType in Model ?? Enumerable.Empty<string>())
        {
            <a class="btn @(legoType == ViewBag.SelectedLegoType ? "btn-primary" : "btn-outline-secondary")" asp-controller="Home" asp-action="Shop" asp-route-legoType="@legoType" asp-route-pageNum="1">@legoType</a>
        }
    </div>
}

@if (ViewContext.RouteData.Values["Action"].ToString().Equals("ListProducts"))
{
    <div class="d-grid gap-2">
        <a class="btn btn-outline-secondary" asp-controller="Administration" asp-action="ListProducts" asp-route-projectType="">View All</a>
        <!-- This is a FOR loop that gets every item based on project type -->
        @foreach (string legoType in Model ?? Enumerable.Empty<string>())
        {
            <!-- Create a button for each specific project type -->
            <a class="btn @(legoType == ViewBag.SelectedLegoType ? "btn-primary" : "btn-outline-secondary")" asp-controller="Administration" asp-action="ListProducts" asp-route-projectType="@legoType" asp-route-pageNum="1">@legoType</a>
        }
    </div>
}